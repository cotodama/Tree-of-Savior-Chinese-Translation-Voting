doctype html
html
	head
		title 救世主之樹 - 國際伺服器 臺灣繁體中文群眾外包翻譯
		// Favicon.
		link(rel='shortcut icon', type='image/png', href='/public/images/favicon.ico')
		// Semantic CSS.
		link(rel='stylesheet', href='/public/libs/Semantic-UI-1.11.4/semantic.min.css')
		// Default CSS.
		link(rel='stylesheet', href='/public/style.css')
		// jQuery js.
		script(src='/public/libs/jquery-1.11.1/jquery-1.11.1.min.js')
		// Semantic js.
		script(src='/public/libs/Semantic-UI-1.11.4/semantic.min.js')

	body
		div.github
			a(href='https://github.com/grass0916/Tree-of-Savior-Chinese-Translation-Voting', target='_blank')
				img(src='/public/images/github_ribbon.png', alt='Fork me on GitHub')
		div.wrapper
			include template/header.jade
			div.container
				div.functionContainer
					div.ui.two.column.stackable.grid
						div.ten.wide.center.aligned.column
							div.login
								div.ui.blue.segment
									if user !== 'GUEST'
										div.ui.stackable.grid
											div.ten.wide.center.aligned.column
												h2.ui.center.aligned.header
													img.ui.circular.image(src='http://graph.facebook.com/' + user.id + '/picture?type=square')
													div.content 您好呀，#{user.name}
														div.sub.header 一起來協助翻譯工作吧！
											div.six.wide.center.aligned.column
												button.ui.blue.fluid.disabled.button 具名貢獻
									else
										div.ui.stackable.grid
											div.six.wide.center.aligned.column
												a(href='login')
													button.ui.facebook.button(onclick="$('.tableContainer').addClass('loading');")
														i.facebook.icon
														| 登入 Facebook
											div.ten.wide.left.aligned.column
												h3.ui.header 為什麼要用 Facebook 登入？
													div.sub.header 為降低灌水比率，請每位玩家都須使用 Facebook 進行登入。
						div.six.wide.center.aligned.column
							div.guides
								include guide.jade
				div.ui.green.segment.tableContainer
					div.ui.active.dimmer
						div.ui.text.medium.loader Loading ... 資料加載中
					div.ui.three.column.stackable.grid
						div.center.aligned.column
							div.ui.checkbox
								input(name='code', type='checkbox', data-group='code')
								label 顯示編號
						div.center.aligned.column
							div.ui.checkbox
								input(name='korean', type='checkbox', data-group='korean')
								label 顯示韓文
						div.center.aligned.column
							div.ui.checkbox
								input(name='english', type='checkbox', data-group='english')
								label 顯示英文
					//- 	div.center.aligned.column
					//- 		div.ui.checkbox
					//- 			input(name='advance', type='checkbox', data-group='advance')
					//- 			label 進階功能
					div.advanceContainer(style="display: none;")
						div.ui.divider
						div.ui.five.column.stackable.centered.grid
							div.center.aligned.column
								select.ui.fluid.dropdown(name='sample')
									option(value='SAMPLE_RANDOM') 系統隨機
									option(value='SAMPLE_CONTINUOUS') 上下文連續
							div.center.aligned.column
								select.ui.fluid.dropdown(name='filter')
									option(value='FILTER_ALL') 不限制過濾
									option(value='FILTER_UNTRANSLATED') 尚未翻譯
									option(value='FILTER_TRANSLATED') 已被翻譯
							div.center.aligned.column
								select.ui.fluid.dropdown(name='file')
									option(value='FILE_ALL') 不指定文件
									each content, file in files
										option(value='FILTER_' + file.toUpperCase()) #{file}
					div.ui.horizontal.divider
						i.setting.icon
					button.ui.fluid.massive.green.button(onclick="refreshList();") 換新一組翻譯
					div.ui.horizontal.divider
						i.dashboard.icon
					include table.jade
		include detail.jade
		include template/footer.jade
		script.
			// Active the popup.
			$('.functionContainer .popup').popup();
			// Random image for header screenshot.
			$('header').css('background-image', 'url(/public/images/screenshots/' + Math.floor(Math.random() * 5 + 1) + '.jpg)');
			// Ban the all drag event.
			$('img').on('dragstart', function (event) { event.preventDefault(); });
			// 
			$(document).ready(function () {
				// Remove the passport-facebook logged-in successfullly, then remove the hash '#_=_' in url.
				window.history.replaceState('', document.title, window.location.pathname);
				// Initial the list.
				refreshList();
			});
		script.
			// Semantic-UI Checkbox default value using session storage.
			if (! sessionStorage.code) {
				sessionStorage.code = 'off';
			}
			if (! sessionStorage.korean) {
				sessionStorage.korean = 'on';
			}
			if (! sessionStorage.english) {
				sessionStorage.english = 'on';
			}
			if (! sessionStorage.advance) {
				sessionStorage.advance = 'off';
			}
			// Semantic-UI checkbox.
			$('.ui.checkbox').map(function (index, element) {
				var group = $('input', element).data('group');
				if (group) {
					var toggle = sessionStorage[group];
					$(element).checkbox((toggle === 'on') ? 'check' : 'uncheck');
				}
			});
			$('.ui.checkbox').checkbox({
				onChecked   : function () {
					var group = $(this).data('group');
					sessionStorage[group] = 'on';
					checkedToggle($(this));
				},
				onUnchecked	: function () {
					var group = $(this).data('group');
					sessionStorage[group] = 'off';
					checkedToggle($(this));
				}
			});
			function checkedToggle($this) {
				var group = $this.data('group');
				if (['code', 'korean', 'english'].indexOf(group) !== -1) {
					var index  = $('th[data-group=' + group + ']').index('thead tr th') + 1;
					var $thead = $('th[data-group=' + group + ']'),
						$tbody = $('tbody tr td:nth-child(' + index + ')');
					if (sessionStorage[group] === 'on') {
						$thead.show();
						$tbody.show();
					} else {
						$thead.hide();
						$tbody.hide();
					}
				} else if (group === 'advance') {
					var $advanceContainer       = $('.advanceContainer'),
						advanceContainerVisible = $advanceContainer.transition('is visible');
					if (sessionStorage[group] === 'on' && ! advanceContainerVisible) {
						$advanceContainer.transition('swing down', '1000ms');
					} else if (sessionStorage[group] === 'off' && advanceContainerVisible) {
						$('.advanceContainer').transition('hide');
					}
				}
			}
			// Semantic-UI dropdown.
			$('.ui.dropdown').dropdown();
		script.
			// Refresh the list.
			$('.tableContainer > .dimmer').transition('swing down', '0ms');
			function refreshList() {
				$('.tableContainer > .dimmer').transition('slide down', '1000ms');
				var sample = $('.advanceContainer select[name=sample]').val(),
					filter = $('.advanceContainer select[name=filter]').val(),
					file   = $('.advanceContainer select[name=file]').val();
				ajaxGetConversationList(sample, filter, file, function (data) {
					var $table = $('.tableContainer table')
						HTML   = $.parseHTML(data, null, true);
					// Replace the element object.
					$table.replaceWith(HTML[0]);
					// Reference by checkbox value.
					$('.ui.checkbox input').map(function (index, $this) { checkedToggle($(this)); });
					// Loading dimmer animation.
					$('.tableContainer > .dimmer').transition('slide down', '300ms');
					// Td hover effect.
					$('.tableContainer td.animate').hover(
						function () {
							$('button', this).transition('set looping').transition('jiggle', '1000ms');
						}, function () {
							$('button', this).transition('remove looping');
						}
					);
				});
			}
			// Fullscreen dialog for detail of conversation.
			function detailConversation(code) {
				ajaxGetConversation(code, function (data) {
					console.log(data);
					var $conversation = $('.detailConversation.ui.modal'),
						$translation  = $('.submitTranslation.ui.modal')
						HTML          = $.parseHTML(data, null, true);
					$conversation.replaceWith(HTML[0]);
					$conversation = $('.detailConversation.ui.modal');
					$translation.replaceWith(HTML[1]);
					$translation  = $('.submitTranslation.ui.modal');
					$translation.modal('attach events', '.detailConversation button.submit.button');
					$conversation.modal('show');
				});
			}
			// Submit the form to write the translation.
			function writeTranslation(code) {
				ajaxSubmitTranslation(code, function (data) {
					if (data === 'SUCCESS') {
						detailConversation(code);
					} else {
						console.log(data);
					}
				});
			}
			// Like one translation.
			function likeTranslation(code, translator) {
				ajaxLikeTranslation(code, translator, function (data) {
					if (data === 'SUCCESS') {
						detailConversation(code);
					} else {
						console.log(data);
					}
				});
			}
		script.
			function ajaxGetConversationList(sample, filter, file, callback) {
				$.ajax(
					{
						url     : '/sample/' + sample + '/filter/' + filter + '/file/' + file,
						type    : 'GET',
						error   : function () {
							var data = { type: 'ERR_TIMEOUT' };
							callback(data);
						},
						success : function (data) {
							callback(data);
						},
						timeout : 10000
					}
				);
			}
			function ajaxGetConversation(code, callback) {
				$.ajax(
					{
						url     : '/conversation/' + code,
						type    : 'GET',
						error   : function () {
							var data = { type: 'ERR_TIMEOUT' };
							callback(data);
						},
						success : function (data) {
							callback(data);
						},
						timeout : 10000
					}
				);
			}
			function ajaxSubmitTranslation(code, callback) {
				$.ajax(
					{
						url     : '/conversation/' + code + '/translation',
						type    : 'POST',
						data    : $('form.translationFrom').serialize(),
						error   : function () {
							var data = { type: 'ERR_TIMEOUT' };
							callback(data);
						},
						success : function (data) {
							callback(data);
						},
						timeout : 10000
					}
				);
			}
			function ajaxLikeTranslation(code, translator, callback) {
				$.ajax(
					{
						url     : '/conversation/' + code + '/translation/' + translator + '/like',
						type    : 'PUT',
						error   : function () {
							var data = { type: 'ERR_TIMEOUT' };
							callback(data);
						},
						success : function (data) {
							callback(data);
						},
						timeout : 10000
					}
				);
			}